openapi: 3.0.1
info:
  title: Zendesk Support API
  description: >
    This is [Zendesk Support API v2](https://developer.zendesk.com/api-reference/) OpenAPI specification.
    Zendesk Support is a simple system for tracking, prioritizing and solving customer support tickets.
  version: "v2"
  x-ballerina-init-description: >
    Create an [Zendesk account](https://www.zendesk.com/) and obtain tokens by following [this guide](https://developer.zendesk.com/api-reference/ticketing/introduction/#security-and-authentication).
  x-ballerina-display:
    label: Zendesk Support
    iconPath: "icon.png"
paths:
  /api/v2/users.json:
    get:
      summary: List Users.
      operationId: listUsers
      responses:
        200:
          description: Returns list of users available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
    post:
      summary: Create User.
      operationId: createUser
      requestBody:
        description: The information for create user request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserInfo'
        required: true
      responses:
        200:
          description: Returns detail of user created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v2/search.json:
    get:
      summary: Search Users.
      operationId: searchUsers
      parameters:
        - name: query
          in: query
          description: Query
          schema:
            type: string
      responses:
        200:
          description: Returns users matching the searchable string
          content:
            application/json: {}
  /api/v2/users/{user_id}.json:
    get:
      summary: Get User By Id.
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          required: true
          description: User Id
          schema:
            type: string
      responses:
        200:
          description: Returns user belong to the user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete User By Id.
      operationId: deleteUserById
      parameters:
        - name: user_id
          in: path
          required: true
          description: User Id
          schema:
            type: string
      responses:
        200:
          description: Returns detail of user deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v2/tickets.json:
    get:
      summary: List Tickets.
      operationId: listTickets
      responses:
        200:
          description: Returns list of tickets available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tickets'
    post:
      summary: Create Ticket.
      operationId: createTicket
      requestBody:
        description: The information for create ticket request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketInfo'
        required: true
      responses:
        200:
          description: Returns detail of created ticket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
  /api/v2/tickets/{ticket_id}:
    put:
      summary: Update Ticket.
      operationId: updateTicket
      parameters:
        - name: ticket_id
          in: path
          required: true
          description: Ticket Id
          schema:
            type: string
      requestBody:
        description: The information for update ticket request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTicketInfo'
        required: true
      responses:
        200:
          description: Returns deatil of updated ticket by ticket id
          content:
            application/json: {}
  /api/v2/organizations.json:
    post:
      summary: Create Organization.
      operationId: createOrganization
      requestBody:
        description: The information for create organization request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationInfo'
        required: true
      responses:
        200:
          description: Organization created
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/Organization'
        422:
          description: Unprocessable Entity
          content:
              application/json: {}
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    CreateTicketInfo:
      description: The information for create ticket request
      type: object
      properties:
        ticket:
          type: object
          $ref: '#/components/schemas/TicketInfo'
    TicketInfo:
      type: object
      description: The ticket information to create
      properties:
        via_followup_source_id:
          type: integer
          description: via_followup_source_id
        subject:
          type: string
          description: subject
        priority:
          type: string
          description: Priority of ticket. Allowed values are "urgent", "high", "normal", or "low"
        comment:
          type: object
          $ref: '#/components/schemas/Comment'
    CreateUserInfo:
      description: The information for create user request
      type: object
      properties:
        user:
          type: object
          $ref: '#/components/schemas/UserInfo'
    UserInfo:
      description: The user information to create
      type: object
      properties:
        custom_role_id:
          type: string
          description: A custom role if the user is an agent on the Enterprise plan or above
        email:
          type: string
          description: The user's primary email address
        name:
          type: string
          description: The user's name
        organization:
          type: object
          description: The user's organization information
          $ref: '#/components/schemas/OrganizationInfo'
        role:
          type: string
          description: The user's role. Possible values are "end-user", "agent", or "admin"
    OrganizationInfo:
      description: The organization information to create
      type: object
      properties:
        name:
          type: string
          description: organization name
    UpdateTicketInfo:
      description: The information for create ticket request
      type: object
      properties:
        ticket:
          type: object
          $ref: '#/components/schemas/TicketInfoUpdate'
    TicketInfoUpdate:
      description: The information for create ticket request
      type: object
      properties:
        ticket:
          type: object
          properties:
            subject:
              type: string
              description: subject
            priority:
              type: string
              description: Priority of ticket. Allowed values are "urgent", "high", "normal", or "low"
            comment:
              type: object
              $ref: '#/components/schemas/Comment'
    Comment:
      description: Ticket comments represent the conversation between requesters, collaborators, and agents
      type: object
      properties:
        author_id:
          type: integer
          description: author_id
        body:
          type: string
          description: body
        html_body:
          type: string
          description: html_body
        public:
          type: boolean
          description: public
    Ticket:
      type: object
      properties:
        allow_attachments:
          type: boolean
          description: Permission for agents to add add attachments to a comment. Defaults to true
          nullable: true
        allow_channelback:
          type: boolean
          description: Is false if channelback is disabled, true otherwise. Only applicable for channels framework ticket
          nullable: true
        assignee_id:
          type: integer
          description: The agent currently assigned to the ticket
          nullable: true
        brand_id:
          type: integer
          description: Enterprise only. The id of the brand this ticket is associated with
          nullable: true
        created_at:
          type: string
          description: When this ticket record was created
          nullable: true
        description:
          type: string
          description: Read-only first comment on the ticket. When creating a ticket, use comment to set the description
          nullable: true
        due_at:
          type: string
          description: If this is a ticket of type "task" it has a due date. Due date format uses ISO 8601 format
          nullable: true
        external_id:
          type: string
          description: An id you can use to link Zendesk Support tickets to local records
          nullable: true
        forum_topic_id:
          type: integer
          description: The topic in the Zendesk Web portal this ticket originated from, if any. The Web portal is deprecated
          nullable: true
        group_id:
          type: integer
          description: The group this ticket is assigned to
          nullable: true
        has_incidents:
          type: boolean
          description: Is true if a ticket is a problem type and has one or more incidents linked to it. Otherwise, the value is false.
          nullable: true
        id:
          type: integer
          description: Automatically assigned when the ticket is created
          nullable: true
        is_public:
          type: boolean
          description: Is true if any comments are public, false otherwise
          nullable: true
        organization_id:
          type: integer
          description: The organization of the requester. You can only specify the ID of an organization associated with the requester 
          nullable: true
        priority:
          type: string
          description: The urgency with which the ticket should be addressed. Allowed values are "urgent", "high", "normal", or "low"
          nullable: true
        problem_id:
          type: integer
          description: For tickets of type "incident", the ID of the problem the incident is linked to
          nullable: true
        raw_subject:
          type: string
          description: The dynamic content placeholder, if present, or the "subject" value
          nullable: true
        recipient:
          type: string
          description: The original recipient e-mail address of the ticket
          nullable: true
        requester_id:
          type: integer
          description: The user who requested this ticket
          nullable: true
        status:
          type: string
          description: The state of the ticket. Allowed values are "new", "open", "pending", "hold", "solved", or "closed"The state of the ticket. Allowed values are "new", "open", "pending", "hold", "solved", or "closed".
          nullable: true
        subject:
          type: string
          description: The value of the subject field for this ticket
          nullable: true
        submitter_id:
          type: integer
          description: The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket
          nullable: true
        ticket_form_id:
          type: integer
          description: Enterprise only. The id of the ticket form to render for the ticket
        type:
          type: string
          description: The type of this ticket. Allowed values are "problem", "incident", "question", or "task"	The type of this ticket. Allowed values are "problem", "incident", "question", or "task".
          nullable: true
        updated_at:
          type: string
          description: When this record last got updated
          nullable: true
        url:
          type: string
          description: The API url of this ticket
          nullable: true
        via_followup_source_id:
          type: integer
          description: The id of a closed ticket when creating a follow-up ticket
          nullable: true
    Tickets:
      type: object
      properties:
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
        next_page:
          type: integer
          description: next_page
          nullable: true
        previous_page:
          type: integer
          description: previous_page
          nullable: true
        count:
          type: integer
          description: count
    Organization:
      type: object
      properties:
        url:
          type: string
          description: The API url of this organization
        id:
          type: integer
          description: Automatically assigned id when the organization is created
        name:
          type: string
          description: A unique name for the organization
        shared_tickets:
          type: boolean
          description: End users in this organization are able to see each other's tickets
        shared_comments:
          type: boolean
          description: End users in this organization are able to see each other's comments on tickets
        external_id:
          type: string
          description: A unique external id to associate organizations to an external record
          nullable: true
        created_at:
          type: string
          description: The time the organization was created
        updated_at:
          type: string
          description: The time the organization was updated
        domain_names:
          type: array
          items: 
            type: string
          description: An array of domain names associated with this organization
        details:
          type: string
          description: Any details obout the organization, such as the address
          nullable: true
        notes:
          type: string
          description: Any notes you have about the organization
          nullable: true
        group_id:
          type: integer
          description: New tickets from users in this organization are automatically put in this group
          nullable: true
        tags:
          type: array
          items: 
            type: string
          description: The tags of the organization
        organization_fields:
          type: object
          description: organization_fields
    CreateOrganizationInfo:
      description: The information for create organization request
      type: object
      properties:
        organization:
          type: object
          $ref: '#/components/schemas/OrganizationInfo'
    User:
      type: object
      properties:
        active:
          type: boolean
          description: False if the user has been deleted
          nullable: true
        alias:
          type: string
          description: An alias displayed to end users
          nullable: true
        chat_only:
          type: boolean
          description: Whether or not the user is a chat-only agent
          nullable: true
        created_at:
          type: string
          description: The time the user was created
          nullable: true
        custom_role_id:
          type: integer
          description: A custom role if the user is an agent on the Enterprise plan or above
          nullable: true
        default_group_id:
          type: integer
          description: The id of the user's default group
          nullable: true
        details:
          type: string
          description: Any details you want to store about the user, such as an address
          nullable: true
        email:
          type: string
          description: The user's primary email address
          nullable: true
        external_id:
          type: string
          description: A unique identifier from another system. The API treats the id as case insensitive. Example - "ian1" and "Ian1" are the same user
          nullable: true
        iana_time_zone:
          type: string
          description: The time zone for the user
          nullable: true
        id:
          type: integer
          description: Automatically assigned  id when the user is created
          nullable: true
        last_login_at:
          type: string
          description: The last time the user signed in to Zendesk Support
          nullable: true
        locale:
          type: string
          description: The user's locale. A BCP-47 compliant tag for the locale. If both "locale" and "locale_id" are present on create or update, "locale_id" is ignored and only "locale" is used.
          nullable: true
        locale_id:
          type: integer
          description: The user's language identifier
          nullable: true
        moderator:
          type: boolean
          description: Designates whether the user has forum moderation capabilities
          nullable: true
        name:
          type: string
          description: The user's name
          nullable: true
        notes:
          type: string
          description: Any notes you want to store about the user
          nullable: true
        only_private_comments:
          type: boolean
          description: true if the user can only create private comments
          nullable: true
        organization_id:
          type: integer
          description: The id of the user's organization. If the user has more than one organization memberships, the id of the user's default organization
          nullable: true
        phone:
          type: string
          description: The user's primary phone number
          nullable: true
        report_csv:
          type: boolean
          description: Whether or not the user can access the CSV report on the Search tab of the Reporting page in the Support admin interface
          nullable: true
        restricted_agent:
          type: boolean
          description: If the agent has any restrictions; false for admins and unrestricted agents, true for other agents
        role:
          type: string
          description: The user's role. Possible values are "end-user", "agent", or "admin"
          nullable: true
        role_type:
          type: integer
          description: The user's role id. 0 for custom agents, 1 for light agent, 2 for chat agent, 3 for chat agent added to the Support account as a contributor (Chat Phase 4), and 5 for billing admins
          nullable: true
        shared:
          type: boolean
          description: If the user is shared from a different Zendesk Support instance. Ticket sharing accounts only
          nullable: true
        shared_agent:
          type: boolean
          description: If the user is a shared agent from a different Zendesk Support instance. Ticket sharing accounts only
          nullable: true
        shared_phone_number:
          type: boolean
          description: Whether the phone number is shared or not
          nullable: true
        signature:
          type: string
          description: The user's signature. Only agents and admins can have signatures
          nullable: true
        suspended:
          type: boolean
          description: If the agent is suspended. Tickets from suspended users are also suspended, and these users cannot sign in to the end user portal
          nullable: true
        ticket_restriction:
          type: string
          description: Specifies which tickets the user has access to. Possible values are - "organization", "groups", "assigned", "requested", null
          nullable: true
        time_zone:
          type: string
          description: The user's time zone
          nullable: true
        two_factor_auth_enabled:
          type: boolean
          description: If two factor authentication is enabled
          nullable: true
        updated_at:
          type: string
          description: The time the user was last updated
          nullable: true
        url:
          type: string
          description: The user's API url
          nullable: true
        verified:
          type: boolean
          description: Any of the user's identities is verified
          nullable: true
    Users:
      type: object
      properties:
          users:
            type: array
            items:
              properties:
                id:
                  type: integer
                  description: id
                url:
                  type: string
                  description: url
                name:
                  type: string
                  description: name
                email:
                  type: string
                  description: email
          next_page:
            type: integer
            description: next_page
            nullable: true
          previous_page:
            type: integer
            description: previous_page
            nullable: true
          count:
            type: integer
            description: count
